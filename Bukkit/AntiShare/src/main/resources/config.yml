# AntiShare - High performance creative protection
# -------------------------------------------------
# This file contains all the information needed to control the plugin,
# but not the settings for what to reject, allow, etc. For those settings
# please see the group_main.yml file.


# The default configuration group to use. For normal operation, do not change
# this value. Please see group_main.yml for more information.
default-group: main

# Block settings for AntiShare
blocks:
    attachments:
        # Indicates whether or not attached blocks (such as
        # torches) should be broken as they were placed. If
        # this is false, they will be broken as Minecraft
        # says they will be (just fall off).
        break-as-placed: true
        # If an attached block is not of the gamemode for the
        # person breaking the block, should they be denied
        # breaking the block? If yes, set this to true.
        deny-break: false
    physics:
        # If true, blocks that 'randomly' break due to world
        # conditions (like cacti) will be 'broken' as placed
        # when they attempt to spawn an item. For example, with
        # cacti, when they are broken due to another block the
        # resulting items from the block break would be as per
        # the placed gamemode (meaning if the cacti was placed
        # in creative mode, it will drop nothing). Set to false
        # to have the default Minecraft action occur.
        block-item-drop: true
        # If true, when a block 'grows' (such as vines) the newly
        # created block inherits the gamemode settings of the block
        # it grew from. Set to false to ignore this setting.
        grow-with-gamemode: true
    hoppers:
        # If true, hoppers will be denied cross-gamemode contamination.
        # This means that 'creative' hoppers cannot transfer items
        # to 'survival' hoppers, but would be able to transfer items
        # to 'creative' or 'natural' hoppers. If false, hoppers are
        # left untouched.
        deny-mixed: true
    pistons:
        # If true, pistons will not be allowed to move blocks that are
        # not of the same type as the piston. For example, a 'creative'
        # piston will not be able to move 'survival' blocks. If the piston
        # does not have a gamemode applied to it, blocks will be permitted
        # to move (and will update accordingly). If this is false, blocks
        # are simply updated to maintain their state.
        deny-mismatch: true
    interaction:
        # If true, AntiShare assumes 'classic mode' where the interaction
        # lists defined are hard-set rules of 'you cannot do this, period.'
        # However, if this is false, AntiShare assumes a more relaxed condition
        # of checking the gamemode of the interacted block before denying the
        # interaction. This would mean that AntiShare checks the gamemode of
        # the block being interacted with. If the block gamemode does NOT
        # match that of the player, they are denied the interaction. This
        # would also mean that creative players can open creative chests
        # (and only creative chests, not survival chests). Any non-container
        # block would still follow the strict 'you can't do this' ruling.
        classic-mode: false
        # If 'classic-mode' is false, this will apply. This particular flag
        # is used to determine whether or not 'natural' or 'no gamemode'
        # containers (like chests) can be used by creative players. If this
        # is true, then creative players will be ALLOWED to use 'natural'
        # containers. Set this to false to DENY 'natural' containers.
        creative-natural-containers: false
        # If 'classic-mode' is false, this will apply. This flag is used to
        # determine if 'natural' (no applied gamemode) containers (chests)
        # are to 'absorb' or 'inherit' the gamemode of the player upon opening.
        # If this flag is true, then containers will inherit the gamemode. If
        # false, then they will not inherit the gamemode.
        natural-container-absorb-gamemode: true
    entities:
        # If true, AntiShare will restrict players from attacking players
        # of other gamemodes. If false, players will be able to attack
        # eachother anyways. This will also apply to any 'gamemode entities'
        # such as a creative pig being beat on by a survival player.
        cross-gamemode-attack: true

# AntiShare internal caching settings. These settings are generally
# not touched unless you are looking to fine tune how AntiShare
# operates in regards to the block game mode cache system.
caching:
    # The total number of blocks per axis to permit. To determine
    # the total of blocks per file/storage object, take this to the
    # power three (eg: 256 x 256 x 256). Values less than or equal
    # to zero inherit a default of 256.
    block-size: 256
    # The periodic save function can be used to help assist in data
    # recovery in the event of a crash or otherwise unclean shutdown
    # of AntiShare. The value here is in milliseconds (seconds x1000)
    # and values less than or equal to zero will disable the feature.
    # The lower this number, the more often all AntiShare data is saved
    # to the storage system.
    periodic-save: 0
    # The length of time something is permitted to remain stale in memory.
    # This value, in milliseconds (seconds x1000), is used to determine
    # if a stale object (unmodified) should be removed from memory. For
    # example, the block system records when a particular block-size section
    # was last touched; if the cache timer ticks and determines that section
    # to be stale (untouched) for the recorded time or greater, it is saved
    # and removed from memory. Values less than or equal to zero inherit
    # the default of 120000 (2 minutes).
    cache-expiration: 120000
    # The period of time, in milliseconds (seconds x1000), by which the cache
    # timer should tick. This means that after the recoreded number of
    # milliseconds, the cache timer is triggered and all stale and expired
    # objects are removed from memory. Values less than or equal to zero
    # inherit a default of 60000 (1 minute).
    cache-timer-interval: 60000
# Inventory settings for AntiShare. Here you can configure how worlds interact
# with eachother (with respect to inventories) as well as how to deal with the
# multiple gamemodes possible. To merge all creative inventories between "world1"
# and "world2", add both "world1" and "world2" under "creative.merge-with". To merge
# creative and survival inventories together, simply add the appropriate gamemodes
# to the "gamemode-merge" list. "none" is reserved in both list types as "no values".
inventories:
    creative:
        merge-with:
        - none
        gamemode-merge:
        - none
    survival:
        merge-with:
        - none
        gamemode-merge:
        - none
    adventure:
        merge-with:
        - none
        gamemode-merge:
        - none
    spectator:
        merge-with:
        - none
        gamemode-merge:
        - none